var t,e;t=this,e=function(){var t=function(t,e,i,n){return new(i||(i=Promise))((function(o,s){function r(t){try{c(n.next(t))}catch(t){s(t)}}function h(t){try{c(n.throw(t))}catch(t){s(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,h)}c((n=n.apply(t,e||[])).next())}))};return class{constructor(t){this.DEFAULT_TIMEOUT=30,this.connstring=t,this.socket=null,this.baseName="",this.name="",this.serviceName="",this.solvables=[],this.timeout=0}get isConnected(){return null!=this.socket&&this.socket.readyState===this.socket.OPEN}get isConnecting(){return null!=this.socket&&this.socket.readyState===this.socket.CONNECTING}get connState(){return this.socket?this.socket.readyState.toString():""}connect(e,i,n=this.DEFAULT_TIMEOUT){return t(this,void 0,void 0,(function*(){return new Promise(((n,o)=>t(this,void 0,void 0,(function*(){this.isConnected&&n(),this.serviceName=e,this.solvables=i;try{this.socket=yield this.promiseWithTimeout(0,this.tryConnect(this.connstring)),yield this.register(this.serviceName,this.solvables,this.timeout)}catch(t){return void o(new Error("Failed to connect: "+t.message))}this.socket.onmessage=t=>{this.onInform&&this.onInform(t.data)},this.socket.onerror=t=>{this.onError&&this.onError("Error connecting to STP. Check that the service is running and refresh page to retry")},this.socket.onclose=e=>t(this,void 0,void 0,(function*(){if(!this.isConnecting)try{yield this.connect(this.serviceName,this.solvables,this.timeout)}catch(t){this.onError&&this.onError("Lost connection to STP. Check that the service is running and refresh page to retry")}})),n()}))))}))}register(e,i,n=this.DEFAULT_TIMEOUT){if(!this.isConnected)throw new Error("Failed to register: connection is not open ("+this.connState+")");return this.promiseWithTimeout(n,new Promise(((n,o)=>t(this,void 0,void 0,(function*(){this.socket&&(this.baseName=e,this.name=this.baseName+"_"+this.getUniqueId(9),this.socket.send(JSON.stringify({method:"Register",params:{serviceName:this.name,language:"javascript",solvables:i.join()}})),n())})))))}disconnect(e=this.DEFAULT_TIMEOUT){return this.promiseWithTimeout(e,new Promise(((e,i)=>t(this,void 0,void 0,(function*(){!this.isConnected&&this.socket&&this.socket.close(),e()})))))}inform(e,i=this.DEFAULT_TIMEOUT){if(!this.isConnected)throw new Error("Failed to send inform: connection is not open ("+this.connState+")");return this.promiseWithTimeout(i,new Promise(((i,n)=>t(this,void 0,void 0,(function*(){this.socket&&(this.socket.send(e),i())})))))}request(t,e=this.DEFAULT_TIMEOUT){throw new Error("Method not implemented")}tryConnect(t){return new Promise(((e,i)=>{var n=new WebSocket(t);n.onopen=()=>e(n),n.onerror=t=>i(new Error("Unspecified error communicating with STP"))}))}promiseWithTimeout(t,e){return Promise.race([e,new Promise(((e,i)=>{let n=setTimeout((()=>{clearTimeout(n),i(new Error("Operation timed out"))}),1e3*t)}))])}getUniqueId(t){return t||(t=9),Math.random().toString(36).substr(2,t)}}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).StpWS=e();